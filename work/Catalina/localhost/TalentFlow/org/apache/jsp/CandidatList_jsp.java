/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.36
 * Generated at: 2025-03-07 14:53:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import Candidature.DAO.CandidatureDAO;
import Candidat.Models.Candidat;
import Candidature.Models.Candidature;

public final class CandidatList_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1740564824324L));
    _jspx_dependants.put("jar:file:/C:/Users/ENAA/.m2/repository/org/glassfish/web/jakarta.servlet.jsp.jstl/3.0.1/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c-1_2.tld", Long.valueOf(1664449878000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("Candidature.DAO.CandidatureDAO");
    _jspx_imports_classes.add("Candidature.Models.Candidature");
    _jspx_imports_classes.add("Candidat.Models.Candidat");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <meta name=\"description\" content=\"TalentFlow Dashboard - Manage candidates and jobs efficiently.\">\r\n");
      out.write("    <title>TalentFlow Dashboard</title>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("        :root {\r\n");
      out.write("            --primary-color: #1e88e5;\r\n");
      out.write("            --secondary-color: #4caf50;\r\n");
      out.write("            --dark-color: #303f9f;\r\n");
      out.write("            --light-color: #f5f5f5;\r\n");
      out.write("            --text-color: #333333;\r\n");
      out.write("            --border-radius: 0.375rem;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: 'Roboto', sans-serif;\r\n");
      out.write("            color: var(--text-color);\r\n");
      out.write("            background: linear-gradient(135deg, #e3f2fd, #f8f9fa);\r\n");
      out.write("            overflow-x: hidden;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .sidebar {\r\n");
      out.write("            height: 100vh;\r\n");
      out.write("            width: 250px;\r\n");
      out.write("            position: fixed;\r\n");
      out.write("            background: linear-gradient(135deg, var(--primary-color), #7986cb);\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding-top: 20px;\r\n");
      out.write("            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n");
      out.write("            transition: width 0.3s ease;\r\n");
      out.write("        }\r\n");
      out.write("        .sidebar .brand {\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("            font-size: 1.8rem;\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 30px;\r\n");
      out.write("            transition: color 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("        .sidebar .brand:hover {\r\n");
      out.write("            color: var(--light-color);\r\n");
      out.write("        }\r\n");
      out.write("        .sidebar a {\r\n");
      out.write("            color: white;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            padding: 15px 20px;\r\n");
      out.write("            display: block;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            transition: background 0.3s, padding-left 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("        .sidebar a:hover {\r\n");
      out.write("            background: var(--dark-color);\r\n");
      out.write("            padding-left: 25px;\r\n");
      out.write("        }\r\n");
      out.write("        .sidebar a i {\r\n");
      out.write("            margin-right: 10px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .content {\r\n");
      out.write("            margin-left: 250px;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            min-height: 100vh;\r\n");
      out.write("        }\r\n");
      out.write("        .navbar {\r\n");
      out.write("            background: rgba(255, 255, 255, 0.95) !important;\r\n");
      out.write("            backdrop-filter: blur(10px);\r\n");
      out.write("            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        }\r\n");
      out.write("        .navbar .navbar-brand {\r\n");
      out.write("            color: var(--primary-color) !important;\r\n");
      out.write("            font-weight: 700;\r\n");
      out.write("            font-size: 1.5rem;\r\n");
      out.write("        }\r\n");
      out.write("        .navbar-toggler {\r\n");
      out.write("            border-color: var(--primary-color);\r\n");
      out.write("        }\r\n");
      out.write("        .navbar-toggler-icon {\r\n");
      out.write("            background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3E%3Cpath stroke='%231e88e5' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3E%3C/svg%3E\");\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .table-responsive {\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @media (max-width: 768px) {\r\n");
      out.write("            .sidebar {\r\n");
      out.write("                width: 80px;\r\n");
      out.write("            }\r\n");
      out.write("            .sidebar .brand, .sidebar a span {\r\n");
      out.write("                display: none;\r\n");
      out.write("            }\r\n");
      out.write("            .sidebar a {\r\n");
      out.write("                text-align: center;\r\n");
      out.write("                padding: 15px;\r\n");
      out.write("            }\r\n");
      out.write("            .content {\r\n");
      out.write("                margin-left: 80px;\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes fadeIn {\r\n");
      out.write("            from { opacity: 0; }\r\n");
      out.write("            to { opacity: 1; }\r\n");
      out.write("        }\r\n");
      out.write("        .content {\r\n");
      out.write("            animation: fadeIn 0.5s ease-in;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- Sidebar -->\r\n");
      out.write("<div class=\"sidebar\">\r\n");
      out.write("    <a href=\"#\" class=\"brand\"><i class=\"fas fa-briefcase me-2\"></i>TalentFlow</a>\r\n");
      out.write("    <a href=\"${pageContext.request.contextPath}/candidates\"><i class=\"fas fa-users\"></i> <span>Candidates</span></a>\r\n");
      out.write("    <a href=\"#jobs\"><i class=\"fas fa-briefcase\"></i> <span>Jobs</span></a>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- Content Area -->\r\n");
      out.write("<div class=\"content\">\r\n");
      out.write("    <nav class=\"navbar navbar-expand-lg shadow-sm p-3\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("            <span class=\"navbar-brand\">Dashboard</span>\r\n");
      out.write("            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("                <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("            </button>\r\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n");
      out.write("                <ul class=\"navbar-nav ms-auto\">\r\n");
      out.write("                    <li class=\"nav-item\">\r\n");
      out.write("                        <a href=\"LogoutServlet\" class=\"nav-link\" href=\"#\">Logout</a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"container mt-4\">\r\n");
      out.write("        <h2 class=\"fw-bold text-primary mb-4\">Candidates</h2>\r\n");
      out.write("        <div class=\"table-responsive\">\r\n");
      out.write("\r\n");
      out.write("            <table class=\"table table-striped table-hover\">\r\n");
      out.write("                <thead class=\"table-dark\">\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th scope=\"col\">ID</th>\r\n");
      out.write("                    <th scope=\"col\">Name</th>\r\n");
      out.write("                    <th scope=\"col\">Email</th>\r\n");
      out.write("                    <th scope=\"col\">Phone</th>\r\n");
      out.write("                    <th scope=\"col\">CV</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("                </thead>\r\n");
      out.write("                <tbody>\r\n");
      out.write("                ");

                    CandidatureDAO candidatureDAO=new CandidatureDAO();
                    List<Candidature> candidatList =  candidatureDAO.getAllCandidates();;
                    for(Candidature candidat : candidatList){


                
      out.write("\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        ");
      out.print(candidat.getCandidatId());
      out.write("\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        ");
      out.print(candidat.getNom());
      out.write("\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        ");
      out.print(candidat.getTelephone());
      out.write("\r\n");
      out.write("                    </td>\r\n");
      out.write("                    <td>\r\n");
      out.write("                        ");
      out.print(candidat.getEmail());
      out.write("\r\n");
      out.write("                    </td>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                    <td>\r\n");
      out.write("                        ");
      out.print(candidat.getCv());
      out.write("\r\n");
      out.write("                    </td>\r\n");
      out.write("                </tr>\r\n");
      out.write("                ");
   }
                
      out.write("\r\n");
      out.write("                </tbody>\r\n");
      out.write("\r\n");
      out.write("            </table>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
